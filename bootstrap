#! /usr/bin/env bash

# shellcheck disable=SC2016

main() {
  printf "This script bootstraps a Nix-based development environment that enables
easy dependency management and portable builds.

If you don't want to use Nix you can kill this script and install rustc & cargo
however you'd like.\n"

  maybe_install_nix

  maybe_install_niv

  # TODO: add optional nix-direnv installation

  printf "\nrunning \`nix-shell\` to enter the development environment"
  # TODO: maybe remove need for `--pure` here?
  #
  # when using rspotify from master cargo install needs to build some required
  # dependencies from source. this build fails clang file not found errors w/o
  # the `--pure` flag
  #
  # based on anecdotal local testing seems to only be run like this once
  # after dependencies have been installed future builds can be done impurely
  nix-shell --pure
}

maybe_install_nix() {
  command -v nix-env > /dev/null && return 0

  printf "\nThis script requires Nix - https://nixos.org/. Hit \`y\` to install
it or any other key to bail now: "

  read -r -n 1 maybe_continue
  if [[ $maybe_continue == 'y' ]]; then
    printf "\n\ninstalling Nix...\n"
    curl -L https://nixos.org/nix/install | sh
  else
    echo "Bailing w/o Nix"
    exit 1
  fi
}

maybe_install_niv() {
  command -v niv > /dev/null && return 0

  printf "\nAre you developing on this project and want to add/remove
dependencies? Hit \`y\` if so to install niv - https://github.com/nmattia/niv/: "

  read -r -n 1 maybe_continue
  if [[ $maybe_continue == 'y' ]]; then
    printf "\n\ninstalling niv...\n"
    nix-env -iA nixpkgs.niv
  else
    echo "Bailing w/o niv"
    exit 1
  fi
}

main
